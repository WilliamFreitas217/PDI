#include <windows.h>   /* Inclui header padrão do Windows   */
#include <GL/glut.h>   /* Inclui header da biblioteca glut  */

#define TOTAL 5

int prec = 30;  /* Total de pontos intermediários */

float pontos[5][3] = {{0.0,0.0,0.0},
                      {0.3,0.8,0.0},
                      {0.7,0.8,0.0},
                      {1.0,0.0,0.0},
                      {0.5,0.2,0.0}}; /* Pontos de controle */

/* Configura estados e parâmetros da OpenGL */
void Init(void) {
 glClearColor (0.0, 0.0, 0.0, 0.0);   /* Seleciona a cor negra como cor de fundo                 */
 glMap1f(GL_MAP1_VERTEX_3,0.0,1.0,3,TOTAL,&pontos[0][0]); /* Define significado dos pontos de controle */
 glEnable(GL_MAP1_VERTEX_3); /* Ativa geração de coordenadas */
}


/* Função de desenho */
void Display (void) {
 float u;
 int i;
 float delta = 1.0f/float(prec);

 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); /* Limpa a tela e o buffer de profundidades */
 glColor3f(1.0f,0.0f,0.0f); /* Especifica a cor vermelha */

  glBegin(GL_LINE_STRIP);  /* Desenha a curva */
  for (u=0;u<=1.0f;u+=delta)
    glEvalCoord1f(u); /* invoca o avaliador para o parâmetro f */
  glEnd();

  glColor3f(0.0f,1.0f,0.0f);  /* Especifica a cor verde */
  glPointSize(5); /* Especifica o tamanho do ponto */

  /* Desenha os pontos de controle */
  glBegin(GL_POINTS);
  for (i=0;i<TOTAL;i++)
    glVertex3fv(pontos[i]);
  glEnd();
  glutSwapBuffers ();
  glFlush();
}

int main() {
  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
  glutInitWindowSize(800,600);
  glutInitWindowPosition(10,10);
  glutCreateWindow("Curva de Bezier");
  glutDisplayFunc(Display);
  Init();
  glutMainLoop();
  return 0;
}
